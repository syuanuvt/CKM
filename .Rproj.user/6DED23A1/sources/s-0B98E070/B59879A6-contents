Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
remotes::install_github("syuanuvt/CKM")
library(remotes)
library(CKM)
library(multichull)
ncluster <- 15
nobs <- 300
nnoisevar <- 50
nvalidvar <- 50
mu <- .8
var <- 1
sim.data <- DataGenCKM(nobs, ncluster, nvalidvar, nnoisevar, mu, var)
dataset <- sim.data[[1]]
cluster.assign <- sim.data[[2]]
ckm.sel.no <- CKMSelNo(dataset, ncluster, nnoisevar,)
km.sel.no <- kmeans(dataset, 3, nstart = 20)
adjustedRandIndex(km.sel.no$cluster,cluster.assign)
ckm.sel.no <- CKMSelNo(dataset, ncluster, 6)
adjustedRandIndex(ckm.sel.var$cluster.assign, cluster.assign)
ckm.sel.var <- CKMSelVar(dataset, ncluster, search = "dep", maxnum = 10, n.rep = 20, kmeans_starts = 20, sr = TRUE, auto = TRUE)
ckm.sel.all <- CKMSelAll(dataset,2,6)
dataset <- dataset
plot.ckm(dataset, ckm.sel.no)
summary.ckm(dataset, ckm.sel.no)
minclust <- 2
maxclust <- 6
search <- "dep"
maxnum <- 10
n.rep <- 20
method <- "globalmax"
kmeans_starts <- 20
recal <- TRUE
sr <- TRUE
ckm.sel.all <- CKMSelAll(dataset, minclust = 2, maxclust = 5, search = "dep", maxnum = 10, n.rep = 20, method = "globalmax", kmeans_starts = 20, recal = TRUE, sr = TRUE)
