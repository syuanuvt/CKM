Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
remotes::install_github("syuanuvt/CKM")
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
remotes::install_github("syuanuvt/CSSCA")
library(devtools)
library(remotes)
library(CKM)
library(ggplot2)
library(GGally)
library(tidyverse)
library(ClusterSSCA)
library(ggfortify)
library(Rtsne)
library(fpc)
remotes::install_github("vqv/ggbiplot")
ncluster <- 3
nobs <- 150
nnoisevar <- 10
nvalidvar <- 40
mu <- 0.6
var <- 1
sim.data <- DataGenCKM(nobs, ncluster, nvalidvar, nnoisevar, mu, var)
dataset <- sim.data[[1]]
cluster.assign <- sim.data[[2]]
dataset.new <- dataset
for (i in 1:20){
  dataset.new[which(dataset[,i]==1),i] <- 3
  dataset.new[which(dataset[,i]==3),i] <- 1
}
ckm.sel.var <- CKMSelVar(dataset.new, ncluster, search = "dep", kmeans_starts = 20, n.rep = 20, recal = TRUE, sr = TRUE)
ckm.sel.var[[1]]$signaling.set
length(ckm.sel.var[[1]]$signaling.set)
a <- nselectboot(dataset[,ckm.sel.var[[1]]$signaling.set], clustermethod = kmeansCBI, krange = ncluster)

search <- "dep"
kmeans_starts <- 20
n.rep <- 20
recal <- TRUE
sr <- TRUE
stable.sel.ckm <- function(dataset, ncluster, search = "dep", kmeans_starts = 20, n.rep = 20, recal = TRUE, sr = TRUE, resample = 50, new.var){
  new.var <- ncol(dataset)-length(ckm.sel.var[[1]]$signaling.set)
  #new.var <- floor(ncol(dataset)/2)
  new.variable <- matrix(nrow =  resample, ncol = (ncol(dataset)-new.var))
  for(i in 1:resample){
    new.dataset <- dataset[sample(1:nrow(dataset),floor(nrow(dataset)/2)),]
    ckm.sel.new <- CKMSelNo(new.dataset, ncluster, new.var, num_starts_kmeans = 20)
    new.variable[i,] <- ckm.sel.new$signaling.set
  }
}
a <- as.matrix(table(new.variable))
b <- a[sort(a,index.return = TRUE, decreasing = TRUE)$ix,]
b[b>=(1-new.var/ncol(dataset))*resample]
b[1:length(ckm.sel.var[[1]]$signaling.set)]



dataset<- as.data.frame(ckm.sel.var$org.data)
signaling.set <- ckm.sel.var$signaling.set
cluster.assign <- ckm.sel.var$cluster.assign
dataset <- dataset[,signaling.set]
rownames(dataset) <- c("a","b", "c", "d", "e", "f", "g", "h", "i", "j")
colnames(dataset) <- paste0("a", 1:ncol(dataset))
dataset$cluster <- cluster.assign
setwd("C:/Users/Shuai Yuan/Documents/Tutorial")
save(dataset, file = "dataset_large.RData")
a <- PlotCoord(dataset, type = "responses")
a <- PlotCoord(dataset, type = "centroids")
print(a)

############
## plotmap
var.ind <- c(rep("u",10),rep("v",10))
var.name <- TRUE
group.name <- TRUE
color <- "Set2"
b <- PlotMap(dataset, var.ind = var.ind, group.name = TRUE)
print(b)
c <- PlotLD(dataset)
print(c)
d <- PlotUniVar(dataset, variable)
print(d)
e <- PlotBiVar(dataset, variable)
print(e)
f <- PlotAssign(dataset)
print(f)
###########
##individual plot
variable <- c("a1","a2","a3")
plot.ind <- "all"
case.name <- FALSE
color.temp <- "Set2"
case.name <- FALSE
PlotUni(dataset, variable = 1:5)
############
## cluster assignment plot
############
obs.text <- TRUE
a <- PlotAssign(dataset, FALSE)
#####################################
#######
## lower dimensional plot
a <- PlotLD(dataset, type = "TSNE")
#######
signaling.set <- ckm.sel.var$signaling.set[1:4]
minclust <- 8
maxclust <- 10
search <- "dep"
maxnum <- 10
n.rep <- 20
method <- "globalmax"
kmeans_starts <- 20
recal <- TRUE
sr <- TRUE
ckm.sel.all <- CKMSelAll(dataset, minclust = 8, maxclust = 10, search = "dep", maxnum = 10, n.rep = 20, method = "globalmax", kmeans_starts = 20, recal = TRUE, sr = TRUE)
ckm.object <- ckm.sel.all
plot.ckm(ckm.sel.all, var.ind = NULL)
summary.ckm(ckm.sel.all)
con1 <- condition0 %>%
  dplyr::filter(ncluster == 5)


